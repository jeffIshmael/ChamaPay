generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id            Int            @id @default(autoincrement())
  address       String         @unique
  name          String?
  role          String
  createdChamas Chama[]        @relation("AdminChamas")
  chamas        ChamaMember[]
  joinRequests  ChamaRequest[]
  notifications Notification[]
  payments      Payment[]
}

model Chama {
  id            Int            @id @default(autoincrement())
  name          String
  slug          String         @unique
  type          String
  startDate     DateTime
  payDate       DateTime
  cycleTime     Int
  started       Boolean        @default(false)
  amount        Int
  maxNo         Int
  adminId       Int
  createdAt     DateTime       @default(now())
  admin         User           @relation("AdminChamas", fields: [adminId], references: [id])
  members       ChamaMember[]
  requests      ChamaRequest[]
  notifications Notification[]
  payments      Payment[]
}

model ChamaMember {
  id      Int   @id @default(autoincrement())
  userId  Int
  chamaId Int
  chama   Chama @relation(fields: [chamaId], references: [id])
  user    User  @relation(fields: [userId], references: [id])
}

model Payment {
  id      Int      @id @default(autoincrement())
  amount  Int
  doneAt  DateTime @default(now())
  txHash  String
  userId  Int
  chamaId Int
  chama   Chama    @relation(fields: [chamaId], references: [id])
  user    User     @relation(fields: [userId], references: [id])
}

model Notification {
  id        Int      @id @default(autoincrement())
  message   String
  senderId  Int
  requestId Int
  userId    Int
  chamaId   Int?
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  chama     Chama?   @relation(fields: [chamaId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model ChamaRequest {
  id        Int      @id @default(autoincrement())
  status    String   @default("pending")
  createdAt DateTime @default(now())
  userId    Int
  chamaId   Int
  chama     Chama    @relation(fields: [chamaId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
